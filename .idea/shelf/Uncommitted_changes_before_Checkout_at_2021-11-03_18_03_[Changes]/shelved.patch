Index: projet-equipe14/src/main/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import net.sf.json.JSONArray;\r\nimport net.sf.json.JSONException;\r\nimport net.sf.json.JSONObject;\r\nimport net.sf.json.JSONSerializer;\r\nimport org.apache.commons.io.IOUtils;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws Exception {\r\n        String fichierEntree = args[0];\r\n        String fichierSortie = args[1];\r\n\r\n\r\n        String stringJson = IOUtils.toString(new\r\n                FileInputStream(fichierEntree), \"UTF-8\");\r\n        try {\r\n            JSONObject jsonObj = (JSONObject) JSONSerializer.toJSON(stringJson);\r\n            verifImprime(jsonObj,fichierSortie);\r\n        }catch(JSONException e){\r\n            System.out.println(\"Le fichier d'entr√©e n'est pas valide.\");\r\n        }\r\n    }\r\n\r\n    public static void verifImprime(JSONObject jsonObj,\r\n                                    String fichierSortie) throws Exception {\r\n        FormationContinue formation = new FormationContinue(jsonObj);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        Verification verificateur = new Verification(formation, fichierSortie);\r\n        verificateur.imprimer(fichierSortie);\r\n    }\r\n}\r\n
===================================================================
diff --git a/projet-equipe14/src/main/java/Main.java b/projet-equipe14/src/main/java/Main.java
--- a/projet-equipe14/src/main/java/Main.java	
+++ b/projet-equipe14/src/main/java/Main.java	
@@ -27,16 +27,6 @@
     public static void verifImprime(JSONObject jsonObj,
                                     String fichierSortie) throws Exception {
         FormationContinue formation = new FormationContinue(jsonObj);
-
-
-
-
-
-
-
-
-
-
         Verification verificateur = new Verification(formation, fichierSortie);
         verificateur.imprimer(fichierSortie);
     }
Index: projet-equipe14/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff\r\n.idea/**/workspace.xml\r\n.idea/**/tasks.xml\r\n.idea/**/usage.statistics.xml\r\n.idea/**/dictionaries\r\n.idea/**/shelf\r\n\r\n# AWS User-specific\r\n.idea/**/aws.xml\r\n\r\n# Generated files\r\n.idea/**/contentModel.xml\r\n\r\n# Sensitive or high-churn files\r\n.idea/**/dataSources/\r\n.idea/**/dataSources.ids\r\n.idea/**/dataSources.local.xml\r\n.idea/**/sqlDataSources.xml\r\n.idea/**/dynamic.xml\r\n.idea/**/uiDesigner.xml\r\n.idea/**/dbnavigator.xml\r\n\r\n# Gradle\r\n.idea/**/gradle.xml\r\n.idea/**/libraries\r\n\r\n# Gradle and Maven with auto-import\r\n# When using Gradle or Maven with auto-import, you should exclude module files,\r\n# since they will be recreated, and may cause churn.  Uncomment if using\r\n# auto-import.\r\n# .idea/artifacts\r\n# .idea/compiler.xml\r\n# .idea/jarRepositories.xml\r\n# .idea/modules.xml\r\n# .idea/*.iml\r\n# .idea/modules\r\n# *.iml\r\n# *.ipr\r\n\r\n# CMake\r\ncmake-build-*/\r\n\r\n# Mongo Explorer plugin\r\n.idea/**/mongoSettings.xml\r\n\r\n# File-based project format\r\n*.iws\r\n\r\n# IntelliJ\r\nout/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Cursive Clojure plugin\r\n.idea/replstate.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n\r\n# Editor-based Rest Client\r\n.idea/httpRequests\r\n\r\n# Android studio 3.1+ serialized cache file\r\n.idea/caches/build_file_checksums.ser\r\n\r\n# Fichiers de test\r\ntest.json
===================================================================
diff --git a/projet-equipe14/.gitignore b/projet-equipe14/.gitignore
--- a/projet-equipe14/.gitignore	
+++ b/projet-equipe14/.gitignore	
@@ -74,4 +74,10 @@
 .idea/caches/build_file_checksums.ser
 
 # Fichiers de test
-test.json
\ No newline at end of file
+test.json
+
+# Dossier idea
+.idea/
+
+# Dossier out/production/projet-equipe14
+out/production/projet-equipe14/
\ No newline at end of file
Index: .idea/codeStyles/codeStyleConfig.xml
===================================================================
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
--- a/.idea/codeStyles/codeStyleConfig.xml	
+++ b/.idea/codeStyles/codeStyleConfig.xml	
@@ -1,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
